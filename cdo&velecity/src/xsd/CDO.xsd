<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSpy v2005 sp1 U (http://www.xmlspy.com) by any (Ru-Board) -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified">
	<xs:complexType name="FieldType">
		<xs:attribute name="N" use="required">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:pattern value="(_|[a-z]|[A-Z])(_|[a-z]|[A-Z]|[0-9])*"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="BooleanFieldType">
		<xs:complexContent>
			<xs:extension base="FieldType">
				<xs:attribute name="V" type="xs:boolean" use="required"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="BooleanArrayFieldType">
		<xs:complexContent>
			<xs:extension base="FieldType">
				<xs:attribute name="V" use="required">
					<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:pattern value="(((false|true),)*(false|true))?"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ByteFieldType">
		<xs:complexContent>
			<xs:extension base="FieldType">
				<xs:attribute name="V" type="xs:byte" use="required"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ByteArrayFieldType">
		<xs:complexContent>
			<xs:extension base="FieldType">
				<xs:attribute name="V" use="required">
					<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:pattern value="([0-9|A-F]{2})*"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ShortFieldType">
		<xs:complexContent>
			<xs:extension base="FieldType">
				<xs:attribute name="V" type="xs:short" use="required"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ShortArrayFieldType">
		<xs:complexContent>
			<xs:extension base="FieldType">
				<xs:attribute name="V" use="required">
					<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:pattern value="((((-)?([0-9]){1,5}),)*((-)?([0-9]){1,5}))?"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="IntegerFieldType">
		<xs:complexContent>
			<xs:extension base="FieldType">
				<xs:attribute name="V" type="xs:int" use="required"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="IntegerArrayFieldType">
		<xs:complexContent>
			<xs:extension base="FieldType">
				<xs:attribute name="V" use="required">
					<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:pattern value="((((-)?([0-9]){1,10}),)*((-)?([0-9]){1,10}))?"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="LongFieldType">
		<xs:complexContent>
			<xs:extension base="FieldType">
				<xs:attribute name="V" type="xs:long" use="required"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="LongArrayFieldType">
		<xs:complexContent>
			<xs:extension base="FieldType">
				<xs:attribute name="V" use="required">
					<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:pattern value="((((-)?([0-9]){1,20}),)*((-)?([0-9]){1,20}))?"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="FloatFieldType">
		<xs:complexContent>
			<xs:extension base="FieldType">
				<xs:attribute name="V" type="xs:float" use="required"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="FloatArrayFieldType">
		<xs:complexContent>
			<xs:extension base="FieldType">
				<xs:attribute name="V" use="required">
					<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:pattern value="((((-)?([0-9]){1,10}(\.([0-9]){1,10})?),)*((-)?([0-9]){1,10}(\.([0-9]){1,10})?))?"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="DoubleFieldType">
		<xs:complexContent>
			<xs:extension base="FieldType">
				<xs:attribute name="V" type="xs:double" use="required"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="DoubleArrayFieldType">
		<xs:complexContent>
			<xs:extension base="FieldType">
				<xs:attribute name="V" use="required">
					<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:pattern value="((((-)?([0-9]){1,20}(\.([0-9]){1,20})?),)*((-)?([0-9]){1,20}(\.([0-9]){1,20})?))?"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="StringFieldType">
		<xs:complexContent>
			<xs:extension base="FieldType">
				<xs:attribute name="V" type="xs:string" use="required"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="StringArrayFieldType">
		<xs:complexContent>
			<xs:extension base="FieldType">
				<xs:sequence>
					<xs:element name="STR" type="xs:string" maxOccurs="unbounded"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="DateFieldType">
		<xs:complexContent>
			<xs:extension base="FieldType">
				<xs:attribute name="V" use="required">
					<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:pattern value="[0-9]{4}-[0-9]{2}-[0-9]{2}"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="DateArrayFieldType">
		<xs:complexContent>
			<xs:extension base="FieldType">
				<xs:attribute name="V" use="required">
					<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:pattern value="((([0-9]{4}-[0-9]{2}-[0-9]{2}),)*([0-9]{4}-[0-9]{2}-[0-9]{2}))?"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="TimeFieldType">
		<xs:complexContent>
			<xs:extension base="FieldType">
				<xs:attribute name="V" use="required">
					<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:pattern value="[0-9]{2}:[0-9]{2}:[0-9]{2}"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="TimeArrayFieldType">
		<xs:complexContent>
			<xs:extension base="FieldType">
				<xs:attribute name="V" use="required">
					<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:pattern value="((([0-9]{2}:[0-9]{2}:[0-9]{2}),)*([0-9]{2}:[0-9]{2}:[0-9]{2}))?"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="DateTimeFieldType">
		<xs:complexContent>
			<xs:extension base="FieldType">
				<xs:attribute name="V" use="required">
					<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:pattern value="[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="DateTimeArrayFieldType">
		<xs:complexContent>
			<xs:extension base="FieldType">
				<xs:attribute name="V" use="required">
					<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:pattern value="((([0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}),)*([0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}))?"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="CDOFieldType">
		<xs:complexContent>
			<xs:extension base="FieldType">
				<xs:sequence>
					<xs:element ref="CDO"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="CDOArrayFieldType">
		<xs:complexContent>
			<xs:extension base="FieldType">
				<xs:sequence>
					<xs:element ref="CDO" minOccurs="0" maxOccurs="unbounded"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="CDOType">
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="BF" type="BooleanFieldType"/>
			<xs:element name="BYF" type="ByteFieldType"/>
			<xs:element name="SF" type="ShortFieldType"/>
			<xs:element name="NF" type="IntegerFieldType"/>
			<xs:element name="LF" type="LongFieldType"/>
			<xs:element name="FF" type="FloatFieldType"/>
			<xs:element name="DBLF" type="DoubleFieldType"/>
			<xs:element name="STRF" type="StringFieldType"/>
			<xs:element name="DF" type="DateFieldType"/>
			<xs:element name="TF" type="TimeFieldType"/>
			<xs:element name="DTF" type="DateTimeFieldType"/>
			<xs:element name="CDOF" type="CDOFieldType"/>
			<xs:element name="BAF" type="BooleanArrayFieldType"/>
			<xs:element name="BYAF" type="ByteArrayFieldType"/>
			<xs:element name="SAF">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="ShortArrayFieldType"/>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="NAF" type="IntegerArrayFieldType"/>
			<xs:element name="LAF" type="LongArrayFieldType"/>
			<xs:element name="FAF" type="FloatArrayFieldType"/>
			<xs:element name="DBLAF" type="DoubleArrayFieldType"/>
			<xs:element name="STRAF" type="StringArrayFieldType"/>
			<xs:element name="DAF" type="DateArrayFieldType"/>
			<xs:element name="TAF" type="TimeArrayFieldType"/>
			<xs:element name="DTAF" type="DateTimeArrayFieldType"/>
			<xs:element name="CDOAF" type="CDOArrayFieldType"/>
		</xs:choice>
	</xs:complexType>
	<xs:element name="CDO" type="CDOType"/>
</xs:schema>
