<?xml version="1.0" encoding="utf-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.voole.trdpay.mapper.system.notice.INotificationsMapper">
	<cache type="org.mybatis.caches.redis.RedisCache"></cache>
	<sql id="wherecondition">
		<trim prefix="WHERE" prefixOverrides="AND | OR">
			<if test="nid != null">
				AND nid =#{nid}
			</if>
			<if test="title != null and title  !='' ">
				AND title like '%${title}%'
			</if>
			<if test="sync_code != null and sync_code  !='' ">
				AND sync_code = #{sync_code}
			</if>
			<if test="context != null and context !='' ">
				AND context like '%${context}%'
			</if>
			<if test="is_read != null ">
				AND is_read = #{is_read}
			</if>
			<if test="is_email != null ">
				AND is_email = #{is_email}
			</if>
			<if test="queryStart!=null">
				AND create_time &gt;= #{queryStart}
			</if>
			<if test="queryEnd!=null">
				AND create_time &lt;= #{queryEnd}
			</if>
		</trim>
	</sql>
	<select id="queryNotifications" parameterType="com.voole.trdpay.vo.system.notice.NotificationsVo" resultType="com.voole.trdpay.vo.system.notice.NotificationsVo">
		SELECT * FROM t_notifications
		<include refid="wherecondition"></include>
		ORDER BY is_read asc,create_time desc
		<if test="pmv!=null and pmv.iDisplayStart!=null and pmv.iDisplayLength!=null">
			limit #{pmv.iDisplayStart},#{pmv.iDisplayLength}
		</if>
	</select>
	<select id="queryUnRUnE" parameterType="com.voole.trdpay.vo.system.notice.NotificationsVo" resultType="com.voole.trdpay.vo.system.notice.NotificationsVo">
		SELECT
		a.*, s.recive_email
		FROM
		(
		SELECT
		count(*) size,
		sync_code
		FROM
		t_notifications
		<include refid="wherecondition"></include>
		GROUP BY
		sync_code
		) a
		LEFT JOIN t_sync s ON a.sync_code = s.sync_code
		WHERE 
		s.is_on = 1
	</select>
	<select id="queryCountNotifications" parameterType="com.voole.trdpay.vo.system.notice.NotificationsVo"
		resultType="java.lang.Integer">
		SELECT count(*) FROM t_notifications
		<include refid="wherecondition"></include>
	</select>
	<update id="updateNotifications" flushCache="true" parameterType="com.voole.trdpay.entry.sytem.notice.NotificationsEntry">
		UPDATE t_notifications
		SET
		<if test="nid != null">
			nid =#{nid},
		</if>
		<if test="title != null and title  !='' ">
			title = #{title},
		</if>
		<if test="sync_code != null and sync_code  !='' ">
			sync_code = #{sync_code},
		</if>
		<if test="context != null and context !='' ">
			context = #{context},
		</if>
		<if test="is_read != null ">
			is_read = #{is_read},
		</if>
		<if test="is_email != null ">
			is_email = #{is_email},
		</if>
		<if test="create_time != null">
			create_time =#{create_time},
		</if>
		<if test="read_time != null">
			read_time = #{read_time},
		</if>
		version=version+1
		WHERE
		nid = #{nid}
		AND version=#{version}
	</update>
	<update id="setAllRead" flushCache="true" parameterType="com.voole.trdpay.entry.sytem.notice.NotificationsEntry">
		UPDATE t_notifications
		SET
			is_read = #{is_read},
			read_time = #{read_time}
		WHERE
			is_read=0
	</update>
	<update id="updateNotificationsforemail" flushCache="true" parameterType="com.voole.trdpay.entry.sytem.notice.NotificationsEntry">
		UPDATE t_notifications
		SET
		<if test="nid != null">
			nid =#{nid},
		</if>
		<if test="title != null and title  !='' ">
			title = #{title},
		</if>
		<if test="sync_code != null and sync_code  !='' ">
			sync_code = #{sync_code},
		</if>
		<if test="context != null and context !='' ">
			context = #{context},
		</if>
		<if test="is_read != null ">
			is_read = #{is_read},
		</if>
		<if test="is_email != null ">
			is_email = #{is_email},
		</if>
		<if test="create_time != null">
			create_time =#{create_time},
		</if>
		<if test="read_time != null">
			read_time = #{read_time},
		</if>
		version=version+1
		WHERE
			is_email = 0
			AND sync_code = #{sync_code}
	</update>
	<insert id="insertNotifications" flushCache="true" parameterType="com.voole.trdpay.entry.sytem.notice.NotificationsEntry">
		INSERT INTO t_notifications (
		<if test="nid != null">
			nid ,
		</if>
		<if test="title != null and title  !='' ">
			title ,
		</if>
		<if test="sync_code != null and sync_code  !='' ">
			sync_code ,
		</if>
		<if test="context != null and context !='' ">
			context ,
		</if>
		<if test="is_read != null ">
			is_read ,
		</if>
		<if test="is_email != null ">
			is_email,
		</if>
		<if test="create_time != null">
			create_time ,
		</if>
		<if test="read_time != null">
			read_time ,
		</if>
		version
		)
		VALUES
		(
		<if test="nid != null">
			#{nid},
		</if>
		<if test="title != null and title  !='' ">
			#{title},
		</if>
		<if test="sync_code != null and sync_code  !='' ">
			#{sync_code},
		</if>
		<if test="context != null and context !='' ">
			#{context},
		</if>
		<if test="is_read != null ">
			#{is_read},
		</if>
		<if test="is_email != null ">
			#{is_email},
		</if>
		<if test="create_time != null">
			#{create_time},
		</if>
		<if test="read_time != null">
			#{read_time},
		</if>
		'0'
		);
	</insert>
	<update id="flushDbCache" flushCache="true">
		SELECT 1 FROM DUAL;
	</update>
</mapper>  